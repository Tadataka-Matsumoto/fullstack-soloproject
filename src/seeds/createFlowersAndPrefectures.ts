import { Factory, Seeder } from "typeorm-seeding";
import { Connection } from "typeorm";
import { Flower } from "../entities/Flower";
import { Prefecture } from "../entities/Prefecture";
import flowers from "./flowers.json";
import prefectures from "./prefectures.json";

export default class CreateFlowersAndPrefectures implements Seeder {
  private async insertInto(
    connection: Connection,
    entityTable: any,
    values: any[]
  ) {
    return connection
      .createQueryBuilder()
      .insert()
      .into(entityTable)
      .values(values)
      .execute();
  }

  public async run(factory: Factory, connection: Connection): Promise<any> {
    await this.insertInto(connection, Flower, flowers);

    // Get IDs of flowers generated by the DB
    const flowerQs = await connection
      .createQueryBuilder(Flower, "flower")
      .getMany();
    const flowerIdMap = flowerQs.reduce((results, { id, name }) => {
      results[name] = id;
      return results;
    }, {});

    const prefecturesWithIds = prefectures.map(({ prefecture, flower }) => ({
      prefecture,
      flower: flowerIdMap[flower]
    }));
    await this.insertInto(connection, Prefecture, prefecturesWithIds);
  }
}
